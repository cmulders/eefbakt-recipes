# Generated by Django 3.1 on 2020-10-13 18:08

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


def update_baking_contentypes(apps, schema_editor):
    """
    Updates content types.
    We want to have the same content type id, when the model is moved.
    """
    ContentType = apps.get_model("contenttypes", "ContentType")
    db_alias = schema_editor.connection.alias

    models = [
        "session",
        "sessionrecipe",
        "sessioningredients",
        "sessionproduct",
    ]
    ContentType.objects.using(db_alias).filter(
        app_label="baking", model__in=models
    ).update(app_label="data")


def update_baking_contentypes_reverse(apps, schema_editor):
    """
    Reverts changes in content types.
    """
    ContentType = apps.get_model("contenttypes", "ContentType")
    db_alias = schema_editor.connection.alias

    models = [
        "session",
        "sessionrecipe",
        "sessioningredients",
        "sessionproduct",
    ]
    ContentType.objects.using(db_alias).filter(
        app_label="data", model__in=models
    ).update(app_label="baking")


class Migration(migrations.Migration):

    dependencies = [
        ("baking", "0012_auto_20201013_1808"),
        ("data", "0010_auto_20200804_2110"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name="Session",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        ("title", models.CharField(max_length=200)),
                        ("description", models.TextField(blank=True)),
                        (
                            "recipe_description",
                            models.TextField(blank=True, verbose_name="Session recipe"),
                        ),
                        (
                            "session_date",
                            models.DateField(default=django.utils.timezone.now),
                        ),
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True)),
                    ],
                    options={"ordering": ["-session_date", "-updated_at"],},
                ),
                migrations.CreateModel(
                    name="SessionRecipe",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        (
                            "amount",
                            models.DecimalField(
                                decimal_places=2, default=1, max_digits=10
                            ),
                        ),
                        ("sort_key", models.IntegerField(default=1)),
                        (
                            "recipe",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.PROTECT,
                                to="data.recipe",
                            ),
                        ),
                        (
                            "session",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="session_recipes",
                                to="data.session",
                            ),
                        ),
                    ],
                    options={"ordering": ["sort_key"],},
                ),
                migrations.CreateModel(
                    name="SessionProduct",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        (
                            "amount",
                            models.DecimalField(
                                decimal_places=2, default=1, max_digits=10
                            ),
                        ),
                        (
                            "unit",
                            models.CharField(
                                choices=[
                                    ("mL", "milliliter"),
                                    ("g", "gram"),
                                    ("pcs", "stuk"),
                                    ("el", "eetlepel"),
                                    ("tl", "theelepel"),
                                ],
                                default="g",
                                max_length=5,
                            ),
                        ),
                        ("sort_key", models.IntegerField(default=1)),
                        (
                            "product",
                            models.ForeignKey(
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to="data.product",
                            ),
                        ),
                        (
                            "session",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="ingredients",
                                to="data.session",
                            ),
                        ),
                    ],
                    options={"ordering": ["sort_key"],},
                ),
                migrations.AddField(
                    model_name="session",
                    name="products",
                    field=models.ManyToManyField(
                        related_name="sessions",
                        through="data.SessionProduct",
                        to="data.Product",
                    ),
                ),
                migrations.AddField(
                    model_name="session",
                    name="recipes",
                    field=models.ManyToManyField(
                        related_name="sessions",
                        through="data.SessionRecipe",
                        to="data.Recipe",
                    ),
                ),
            ],
            database_operations=[
                migrations.RunPython(
                    update_baking_contentypes, update_baking_contentypes_reverse
                )
            ],
        )
    ]
